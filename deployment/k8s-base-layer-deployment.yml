apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-map
data:
  USERS_PATH: "http://user-app-service"
  ROUTES_PATH: "http://route-app-service"
  OFFERS_PATH: "http://offer-app-service"
  POSTS_PATH: "http://post-app-service"
  SCORES_PATH: "http://score-app-service"

---
apiVersion: v1
stringData:
  DB_HOST: "192.168.0.3"
  USER_DB_NAME: "user_db"
  ROUTE_DB_NAME: "route_db"
  POST_DB_NAME: "post_db"
  OFFER_DB_NAME: "offer_db"
  SCORE_DB_NAME: "score_db"
  DB_PORT: "5432"
  DB_USER: "postgres"
  DB_PASSWORD: "group8-password"
kind: Secret
metadata:
  name: appsecrets

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-app
  labels:
    app: user-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-app
  template:
    metadata:
      labels:
        app: user-app
        gcp-auth-skip-secret: "true"
    spec:
      containers:
        - name: user-app
          image: us-central1-docker.pkg.dev/native-cloud-uniandes/native-cloud-2024-1/user-app:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000
          env:
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: USER_DB_NAME
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD

          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: user-health-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3000
    type: HTTP
    requestPath: /users/ping

---
kind: Service
apiVersion: v1
metadata:
  name: user-app-service
  annotations:
    cloud.google.com/backend-config: '{"default": "user-health-config"}'
spec:
  type: NodePort
  selector:
    app: user-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-app
  labels:
    app: post-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post-app
  template:
    metadata:
      labels:
        app: post-app
        gcp-auth-skip-secret: "true"
    spec:
      containers:
        - name: post-app
          image: us-central1-docker.pkg.dev/native-cloud-uniandes/native-cloud-2024-1/post-app:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3001
          env:
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: POST_DB_NAME
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: USERS_PATH
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: USERS_PATH

          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: post-health-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3001
    type: HTTP
    requestPath: /posts/ping

---
kind: Service
apiVersion: v1
metadata:
  name: post-app-service
  annotations:
    cloud.google.com/backend-config: '{"default": "post-health-config"}'
spec:
  type: NodePort
  selector:
    app: post-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: route-app
  labels:
    app: route-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: route-app
  template:
    metadata:
      labels:
        app: route-app
        gcp-auth-skip-secret: "true"
    spec:
      containers:
        - name: route-app
          image: us-central1-docker.pkg.dev/native-cloud-uniandes/native-cloud-2024-1/route-app:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3002
          env:
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: ROUTE_DB_NAME
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: USERS_PATH
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: USERS_PATH

          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: route-health-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3002
    type: HTTP
    requestPath: /routes/ping

---
kind: Service
apiVersion: v1
metadata:
  name: route-app-service
  annotations:
    cloud.google.com/backend-config: '{"default": "route-health-config"}'
spec:
  type: NodePort
  selector:
    app: route-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offer-app
  labels:
    app: offer-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offer-app
  template:
    metadata:
      labels:
        app: offer-app
        gcp-auth-skip-secret: "true"
    spec:
      containers:
        - name: offer-app
          image: us-central1-docker.pkg.dev/native-cloud-uniandes/native-cloud-2024-1/offer-app:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3003
          env:
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_HOST
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: OFFER_DB_NAME
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PORT
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: DB_PASSWORD
            - name: USERS_PATH
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: USERS_PATH

          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: offer-health-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3003
    type: HTTP
    requestPath: /offers/ping

---
kind: Service
apiVersion: v1
metadata:
  name: offer-app-service
  annotations:
    cloud.google.com/backend-config: '{"default": "offer-health-config"}'
spec:
  type: NodePort
  selector:
    app: offer-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3003
